@page "/Tecnicos/Index"

@inject TecnicosService tecnicoService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Index Tecnico</PageTitle>
<div class="card">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h2><strong>Consulta de T&eacute;cnicos</strong></h2>
		</div>
		@*Body*@
		<div class="card-body">
			@*Labels*@
			<div class="row">
				<div class="col-3">
					<label class="form-label" for="Filtro"><strong>Filtrar por</strong></label>
				</div>
				<div class="col-4">
					<label class="form-label" for="ValorFiltro"><strong>B&uacute;squeda</strong></label>
				</div>
			</div>
			@*Inputs y Buttons*@
			<div class="row">
				@*Filtro*@
				<div class="col-3">
					<InputSelect class="form-select" @bind-Value="filtro">
						<option value="" disabled>Elija una opción</option>
						<option value="id"><strong>ID</strong></option>
						<option value="nombres"><strong>Nombres</strong></option>
					</InputSelect>
				</div>
				@*Búsqueda*@
				<div class="col-4">
					<div class="input-group">
						<input class="form-control" @bind="valorFiltro" placeholder="Buscar" />
						<button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
					</div>
				</div>
				<div class="col-auto">
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise" @onclick="Restablecer"> Restablecer</button>
				</div>
				<div class="col text-end">
					<button type="button" class="btn btn-outline-primary ms-2" @onclick="MostrarPantallaCrear">Crear</button>
				</div>
			</div>
			@*Tabla*@
			<div class="text-center mt-3">
				<table class="table table-bordered">
					<thead>
						<tr>
							<th>T&eacute;cnicoId</th>
							<th>Nombre</th>
							<th>SueldoHora</th>
							<th>Editar</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Tecnicos)
						{
							<tr>
								<td>@item.TecnicoId</td>
								<td>@item.Nombres</td>
								<td>@item.SueldoHora.ToString("N2")</td>
								<td><a class="btn btn-outline-warning bi bi-pencil-square" href="/Tecnicos/Edit/@item.TecnicoId"></a></td>
								<td><button type="button" class="btn btn-outline-danger bi bi-trash2" @onclick="()=> Eliminar(item.TecnicoId)"></button></td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		@*footer*@
		<div class="card-footer">
			<p><strong>Total de T&eacute;cnicos: @Tecnicos.Count()</strong></p>
		</div>
	</div>
</div>

@code {
	public List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();
	private string filtro = "";
	private string valorFiltro = "";

	private async Task Buscar()
	{
		if (valorFiltro.Trim() != "")
		{
			if (filtro == "id" && int.TryParse(valorFiltro, out int tecnicoId))
			{
				Tecnicos = await tecnicoService.Listar(p => p.TecnicoId == tecnicoId);
			}
			else if (filtro == "nombres")
			{
				Tecnicos = await tecnicoService.Listar(t => t.Nombres.ToLower().Contains(valorFiltro.ToLower()));
			}
		}
		else
		{
			Tecnicos = await tecnicoService.Listar(t => true);
		}
	}

	public async Task Eliminar(int id)
	{
		var eliminado = await tecnicoService.Eliminar(id);
		if (eliminado)
		{
			await Buscar();
		}
		
	}

	public async Task Restablecer()
	{
		Tecnicos = await tecnicoService.Listar(t => true);
		filtro = string.Empty;
		valorFiltro = string.Empty;
	}

	public void MostrarPantallaCrear()
	{
		Navigation.NavigateTo("/Tecnicos/Create");
	}

	public void MostrarPantallaEditar(int id)
	{
		Navigation.NavigateTo($"/Tecnico/Edit/{id}");
	}

	public void MostrarPantallaDetalle(int id)
	{
		Navigation.NavigateTo($"/Tecnico/Create/{id}");
	}
}